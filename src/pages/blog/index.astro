---
import Blog from "@/components/Blog.astro";
import PageHeader from "@/components/PageHeader.astro";
import Pagination from "@/components/Pagination.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import Cta from "@/partials/Cta.astro";
import type { CollectionKey } from "astro:content";
import { getEntry } from "astro:content";

const blogs_index = await getEntry("blog", "-index");
const blogs = await getSinglePage("blog");
const authors = await getSinglePage("authors");
const addAuthors = blogs.map((blog: any) => {
  const author: any = authors.find(
    (author: any) => author.data.title === blog.data.author,
  );
  return {
    ...blog,
    data: {
      ...blog.data,
      authorImage: author.data.image,
    },
  };
});
const sortedBlogs = sortByDate(addAuthors);
const totalPages = Math.ceil(addAuthors.length / config.settings.pagination);
const currentBlogs = sortedBlogs.slice(0, config.settings.pagination);
---

<Base title={blogs_index.data.title}>
  <PageHeader title={blogs_index.data.title} />
  <section>
    <div class="container">
      <div class="row justify-center">
        {
          currentBlogs.map((blog, i) => (
            <div class="col-12 mb-8 md:col-6 lg:col-5">
              <Blog blog={blog} />
            </div>
          ))
        }
      </div>
    </div>
  </section>
  <Pagination currentPage={1} totalPages={totalPages} section="blog" />
  <Cta />
</Base>
