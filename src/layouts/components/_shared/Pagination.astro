---
const { section, currentPage, totalPages } = Astro.props;
const indexPageLink = currentPage === 2;
const hasPrevPage = currentPage > 1;
const hasNextPage = totalPages > currentPage;

let pageList = [];
for (let i = 1; i <= totalPages; i++) {
  pageList.push(i);
}
---

<section class="section py-10">
  <div class="container">
    <div class="row mb-4">
      <div class="col-12">
        {
          totalPages > 1 && (
            <nav class="mb-4 flex justify-center " aria-label="Pagination">
              {/* previous */}
              {
                <a
                  href={
                    indexPageLink
                      ? `${section ? "/" + section : "/"}`
                      : `${section ? "/" + section : ""}/${currentPage - 1}/`
                  }
                  class={` mr-2 rounded-lg px-4 py-3 text-primary hover:bg-primary hover:text-white ${
                    hasPrevPage ? "block" : "hidden"
                  }`}
                >
                  <span class="sr-only">Previous</span>
                  <svg
                    class="mt-1 h-5 w-5"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </a>
              }

              {/* page index */}
              {pageList.map((pagination, i) =>
                pagination === currentPage ? (
                  <span
                    aria-current="page"
                    class={` mr-2 rounded-lg bg-primary  px-6 py-3 text-white`}
                  >
                    {pagination}
                  </span>
                ) : (
                  <a
                    href={
                      i === 0
                        ? `${section ? "/" + section : "/"}`
                        : `${section ? "/" + section : ""}/${pagination}/`
                    }
                    aria-current="page"
                    class={` mr-2 rounded-lg px-6 py-3 text-primary hover:bg-primary hover:text-white`}
                  >
                    {pagination}
                  </a>
                )
              )}

              {/* next page */}
              {
                <a
                  href={`${section ? "/" + section : ""}/${currentPage + 1}/`}
                  class={` mr-2 rounded-lg px-4 py-3 text-primary hover:bg-primary hover:text-white  ${
                    hasNextPage ? "block" : "hidden"
                  }`}
                >
                  <span class="sr-only">Next</span>
                  <svg
                    class="mt-1 h-5 w-5"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                    fill="currentColor"
                    aria-hidden="true"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </a>
              }
            </nav>
          )
        }
      </div>
    </div>
  </div>
</section>
