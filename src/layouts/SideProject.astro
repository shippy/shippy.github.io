---
import type { CollectionEntry } from 'astro:content';
import { getEntries } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import defaultHeroImage from '../assets/default_other_hero_image.png';

import { Image } from 'astro:assets';

type Props = CollectionEntry<'side_projects'>['data'];

const { title, description, pubDate, heroImage, githubUrl, projectUrl, blogRef, technologies } = Astro.props;
const blogs = blogRef ? await getEntries(blogRef) : undefined;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description || ""} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage ? <Image width={1020} height={510} src={heroImage} alt="" /> : <Image width={1020} height={510} src={defaultHeroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
						</div>
						<h1>{title}</h1>
						{description && <p>{description}</p>}
						<hr />
					</div>
					<div class="links">
						<ul>
							{githubUrl && <li><a href={githubUrl}>Source code available.</a></li>}
							{projectUrl && <li><a href={projectUrl}>Project deployed.</a></li>}
							{blogs && blogs.map(
								(blog) => <li>
									Blog: <a href=`/blog/${blog.slug}`>{blog.data.title}</a>
								</li>
							)}
						</ul>
					</div>
					{technologies && (
						<div class="technologies">
							<h2>Technologies Used</h2>
							<ul>
								{technologies.map((tech) => (
									<li>#{tech}</li>
								))}
							</ul>
						</div>
					)}
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
